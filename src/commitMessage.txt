refactor useCollectionStore and splits into useCardStore

it was noticed that by using useCollectionStore for global store would create re-render for the entire list of cards everytime we would update the number of cards creting visualziation issues (eg: increasing the quantity measn getting the entire list, then make a copy with the new value and send it back to the colelction, causing render of the entire list, this means everytime i click on add, the screen shifts back to the top, as the list has been refresheded in its entirety). to avoid this, a new local store has been set (using zustand, as the Card component has the potential to increase in scope, which means it needs to be scalable in the future) and functions from useCollectionStore such as addCardQuantity, decreaseCardQuantity and setBulkQuantity has been moved into this new collection.

this means that moving forward every card has his own store with info on itself (things like possession in the colelction are left in collection)

removes "each child should have unique key" warning. this was due to filter components being mapped but missed the key component

the filtering logic has been moved inside his own component Filter to avoid re-rendering

add a minimal loader screen. it operates via a useRef(no re-render) set to true at the beginning and then to false at the end of the fetch/set operations

improve speed of search, by avoiding setting it on the useCardStore, since search is just for show